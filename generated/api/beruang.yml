openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /wallets:
    get:
      tags:
        - Wallet
      summary: Get all wallets
      description: Get all wallets
      operationId: findWallets
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletsResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    post:
      tags:
        - Wallet
      summary: Create a new wallet
      description: Create a new wallet
      operationId: createWallet
      requestBody:
        description: Details of the new wallet to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewWalletRequest"
        required: true
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}:
    get:
      tags:
        - Wallet
      summary: Get a wallet
      description: Get a wallet
      operationId: findWallet
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    put:
      tags:
        - Wallet
      summary: Update wallet
      description: Update wallet
      operationId: updateWallet
      parameters:
        - name: walletId
          in: path
          description: the id of the wallet to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWalletRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    delete:
      tags:
        - Wallet
      summary: Delete a wallet
      description: Delete a wallet
      operationId: deleteWallet
      parameters:
        - name: walletId
          in: path
          description: Wallet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: { }
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/set-default-true:
    post:
      tags:
        - Wallet
      summary: Set wallet as default
      description: Set wallet as default
      operationId: setDefaultTrue
      parameters:
        - name: walletId
          in: path
          description: Wallet id to set default to true
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Empty body
        content:
          application/json:
            schema: { }
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/budgets:
    get:
      tags:
        - Budget
      summary: Get all budgets
      description: Get all budgets
      operationId: findBudgets
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet that contains all the budget
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetsResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    post:
      tags:
        - Budget
      summary: Create a budget
      description: Create a budget
      operationId: createBudget
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet that contains all the budget
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewBudgetRequest"
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/budgets/{budgetId}:
    get:
      tags:
        - Budget
      summary: Get a budget in a wallet
      description: Get a budget in a wallet
      operationId: findBudget
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: budgetId
          in: path
          description: Id of the budget
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    put:
      tags:
        - Budget
      summary: Update a budget in a wallet
      description: Update a budget in a wallet
      operationId: updateBudget
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: budgetId
          in: path
          description: Id of the budget
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Budget to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBudgetRequest"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    delete:
      tags:
        - Budget
      summary: Delete a budget
      description: Delete a budget
      operationId: deleteBudget
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: budgetId
          in: path
          description: Id of the budget
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: { }
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/transactions:
    get:
      tags:
        - Transaction
      summary: Get all transactions in a wallet
      description: Get all transactions in a wallet
      operationId: findTransactions
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: fromDate
          in: query
          description: Starting date to search transaction record. Transaction date before this date will be excluded
          required: false
          schema:
            type: string
            format: date
            example: "2022-01-30"
        - name: toDate
          in: query
          description: Ending date to search transaction record. Transaction date after this date will be excluded
          required: false
          schema:
            type: string
            format: date
            example: "2022-01-30"
        - name: fromAmount
          in: query
          description: Starting amount to search transaction record. Transaction amount lower than this will be excluded
          required: false
          schema:
            type: number
            format: double
        - name: toAmount
          in: query
          description: Ending amount to search transaction record. Transaction amount higher than this will be excluded
          required: false
          schema:
            type: number
            format: double
        - name: categoryIds
          in: query
          description: List of category ids to search transaction record. The transaction with category id listed in this parameter will be included
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    post:
      tags:
        - Transaction
      summary: Create a new transaction in a wallet
      description: Create a new transaction in a wallet
      operationId: createTransaction
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: New transaction information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTransactionRequest"
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/transactions/move-to-category:
    post:
      tags:
        - Transaction
      summary: Move transactions from oldCategory to newCategory
      description: Move transactions from oldCategory to newCategory
      operationId: moveTransactionToNewCategory
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: oldCategoryId
          in: query
          description: category id to be moved from
          required: true
          schema:
            type: integer
            format: int64
        - name: newCategoryId
          in: query
          description: Category id to be moved to
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Empty body
        content:
          application/json:
            schema: { }
      responses:
        200:
          description: OK
          content: { }
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/transactions/move-to-wallet:
    post:
      tags:
        - Transaction
      summary: Move transactions from old wallet to new wallet
      description: Move transactions from old wallet to new wallet
      operationId: moveTransactionToNewWallet
      parameters:
        - name: walletId
          in: path
          description: Id of the old wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: newWalletId
          in: query
          description: Wallet Id to be moved to
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Empty body
        content:
          application/json:
            schema: { }
      responses:
        200:
          description: OK
          content: { }
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /wallets/{walletId}/transactions/{transactionId}:
    get:
      tags:
        - Transaction
      summary: Get a transaction in a wallet
      description: Get a transaction in a wallet
      operationId: findTransaction
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    put:
      tags:
        - Transaction
      summary: Update a transaction in a wallet
      description: Update a transaction in a wallet
      operationId: updateTransaction
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated transaction information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTransactionRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    delete:
      tags:
        - Transaction
      summary: Delete a transaction in a wallet
      description: Delete a transaction in a wallet
      operationId: deleteTransaction
      parameters:
        - name: walletId
          in: path
          description: Id of the wallet
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: { }
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /budgets/{budgetId}/budget-histories:
    get:
      tags:
        - Budget History
      summary: Get list of budget history given the budgetId
      description: Get list of budget history given the budgetId
      operationId: findBudgetHistories
      parameters:
        - name: budgetId
          in: path
          description: the id of budget
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetHistoriesResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /budgets/{budgetId}/budget-histories/{budgetHistoryId}:
    get:
      tags:
        - Budget History
      summary: Get list of budget history given the budgetId
      description: Get list of budget history given the budgetId
      operationId: findBudgetHistory
      parameters:
        - name: budgetId
          in: path
          description: the id of budget
          required: true
          schema:
            type: integer
            format: int64
        - name: budgetHistoryId
          in: path
          description: the id of budget history
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetHistoryResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /categories:
    get:
      tags:
        - Category
      summary: Get all tags
      description: Get all tags
      operationId: findCategories
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesResponse"
    post:
      tags:
        - Category
      summary: Create a category
      description: Create a category
      operationId: createCategory
      requestBody:
        description: Category to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCategoryRequest"
        required: true
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  /categories/{categoryId}:
    get:
      tags:
        - Category
      summary: Get a category
      description: Get a category
      operationId: findCategory
      parameters:
        - name: categoryId
          in: path
          description: Id of the category to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    put:
      tags:
        - Category
      summary: Update a category
      description: Update a category
      operationId: updateCategory
      parameters:
        - name: categoryId
          in: path
          description: Id of the category to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Category object with the updated content
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCategoryRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
    delete:
      tags:
        - Category
      summary: Delete a category
      description: Delete a category
      operationId: deleteCategory
      parameters:
        - name: categoryId
          in: path
          description: Id of the category to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: { }
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
components:
  schemas:
    NewWalletRequest:
      type: object
      required:
        - name
        - defaultCurrencyCode
        - categories
      properties:
        name:
          type: string
        defaultCurrencyCode:
          type: string
        initialBalanceAmount:
          type: number
          format: double
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
    Wallet:
      type: object
      required:
        - name
        - defaultCurrencyCode
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        defaultCurrencyCode:
          type: string
        defaultWallet:
          type: boolean
        initialBalanceAmount:
          type: number
          format: double
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
    WalletResponse:
      type: object
      required:
        - wallet
      properties:
        wallet:
          $ref: "#/components/schemas/Wallet"
    WalletsResponse:
      type: object
      required:
        - wallets
      properties:
        wallets:
          type: array
          items:
            $ref: "#/components/schemas/Wallet"
    UpdateWalletRequest:
      type: object
      minProperties: 1
      properties:
        name:
          type: string
        defaultCurrencyCode:
          type: string
        initialBalanceAmount:
          type: number
          format: double
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
    Category:
      type: object
      required:
        - name
        - expense
        - icon
        - color
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        expense:
          type: boolean
        icon:
          type: string
        color:
          type: string
        active:
          type: boolean
    CategoryResponse:
      type: object
      required:
        - category
      properties:
        category:
          $ref: "#/components/schemas/Category"
    CategoriesResponse:
      type: object
      required:
        - categories
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
    NewCategoryRequest:
      type: object
      required:
        - name
        - expense
        - icon
        - color
      properties:
        name:
          type: string
        expense:
          type: boolean
        icon:
          type: string
        color:
          type: string
    UpdateCategoryRequest:
      type: object
      minProperties: 1
      properties:
        name:
          type: string
        expense:
          type: boolean
        icon:
          type: string
        color:
          type: string
    Budget:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        period:
          type: string
        limitAmount:
          type: number
          format: double
        startFrom:
          type: string
          format: date
          example: "2022-01-30"
        recurring:
          type: boolean
        wallet:
          $ref: "#/components/schemas/Wallet"
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
    BudgetResponse:
      type: object
      required:
        - budget
      properties:
        budget:
          $ref: "#/components/schemas/Budget"
    BudgetsResponse:
      type: object
      required:
        - budgets
      properties:
        budgets:
          type: array
          items:
            $ref: "#/components/schemas/Budget"
    NewBudgetRequest:
      type: object
      required:
        - name
        - period
        - limitAmount
        - categories
      properties:
        name:
          type: string
        period:
          type: string
        limitAmount:
          type: number
          format: double
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
    UpdateBudgetRequest:
      type: object
      minProperties: 1
      properties:
        name:
          type: string
        period:
          type: string
        limitAmount:
          type: number
          format: double
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        note:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
          example: "2022-01-30"
        wallet:
          $ref: "#/components/schemas/Wallet"
        category:
          $ref: "#/components/schemas/Category"
    TransactionResponse:
      type: object
      required:
        - transaction
      properties:
        transaction:
          $ref: "#/components/schemas/Transaction"
    TransactionsResponse:
      type: object
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
    NewTransactionRequest:
      type: object
      required:
        - note
        - amount
        - date
        - categoryId
      properties:
        note:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
          example: "2022-01-30"
        categoryId:
          type: integer
          format: int64
    UpdateTransactionRequest:
      type: object
      minProperties: 1
      properties:
        note:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
          example: "2022-01-30"
        categoryId:
          type: integer
          format: int64
    BudgetHistory:
      type: object
      properties:
        startDate:
          type: string
          format: date
          example: "2022-01-30"
        endDate:
          type: string
          format: date
          example: "2022-01-30"
        limitAmount:
          type: number
          format: double
        currentAmount:
          type: number
          format: double
    BudgetHistoryResponse:
      type: object
      properties:
        budgetHistory:
          $ref: "#/components/schemas/BudgetHistory"
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    BudgetHistoriesResponse:
      type: object
      properties:
        budgetHistories:
          type: array
          items:
            $ref: '#/components/schemas/BudgetHistory'
    GenericErrorModel:
      required:
        - errors
      type: object
      properties:
        errors:
          required:
            - body
          type: object
          properties:
            body:
              type: array
              items:
                type: string

